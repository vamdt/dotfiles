#-- base --#

set -g default-terminal "screen-256color"
set -g display-time 3000
# delay time between prefix and command
set -s escape-time 0
set -g history-limit 20000
# window index from 1(not 0)
set -g base-index 1
# pane index from 1(not 0)
set -g pane-base-index 1
# reattach to user namespace
#set-option -g default-command "reattach-to-user-namespace -l bash"
#set-option -g default-command "reattach-to-user-namespace -l zsh"

#-- bindkeys --#
# prefix key (Ctrl+a)
set -g prefix C-a
# free (Ctrl+b)
unbind C-b
# send Ctrl-A to other apps
bind C-a send-prefix



# split windows like vim.  - Note: vim's definition of a horizontal/vertical split is reversed from tmux's
unbind '"'
unbind %
unbind s
bind - split-window -v
#bind S split-window -v -l 40
bind | split-window -h
#bind V split-window -h -l 120

# navigate panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-l resize-pane -R 10

# swap panes
bind C-u swapp -U
bind C-d swapp -D

# kill pane
bind q killp
# kill window
bind C-q killw

# last pane
bind e lastp
# last window
bind C-e last


# Copy and paste like in vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


bind '~' splitw htop
bind ! splitw ncmpcpp
bind m command-prompt "splitw -h 'exec man %%'"

# reload configuration
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# getting tmux to copy a buffer to the clipboard
# set-option -g default-command "reattach-to-user-namespace -l zsh" # or bash...
# bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to system clipboard"
# bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


#-- statusbar --#

set -g status-justify centre

set -g status-left "#[fg=green]s#S:w#I.p#P#[default]"
set -g status-left-attr bright
set -g status-left-length 20
set -g status-keys vi
setw -g mode-keys vi


set -g status-utf8 on
set -g status-interval 1

set -g visual-activity on
setw -g monitor-activity on

setw -g automatic-rename off


# default statusbar colors
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
set -g status-attr default

# default window title colors
setw -g window-status-fg colour244
setw -g window-status-bg default
#setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg colour166 #orange
setw -g window-status-current-bg default
#setw -g window-status-current-attr bright

# pane border
set -g pane-border-fg white
# bg id too width
#set -g pane-border-bg black
set -g pane-active-border-fg green
#set -g pane-active-border-bg yellow

# message text
set -g message-bg colour235 #base02
set -g message-fg colour166 #orange

# pane number display
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange

# clock
setw -g clock-mode-colour colour64 #green
